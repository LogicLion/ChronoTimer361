import javax.swing.JApplet;
import javax.swing.JPanel;

import java.awt.BorderLayout;

import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.util.ArrayList;

import javax.swing.ButtonGroup;
import javax.swing.JTextArea;
import javax.swing.JLabel;
import javax.swing.JCheckBox;
import javax.swing.JTextPane;
import javax.swing.JRadioButton;


public class ChronoTimerEmulator extends JApplet {

	/**
	 * 
	 */
	ChronoTimer t = new ChronoTimer();
	private static final long serialVersionUID = 1L;
	Command c;
	private String channelToConnect;
	private String typeOfSensorToConnect;
	/**
	 * Create the applet.
	 */
	public ChronoTimerEmulator() {
		setSize(800,600);
		
		JPanel panel = new JPanel();
		panel.setSize(800, 600);
		getContentPane().add(panel, BorderLayout.CENTER);
		panel.setLayout(null);
		
		JButton powerButton = new JButton("Power");
		powerButton.setBounds(33, 20, 68, 29);
		powerButton.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				c = Command.commandFromString("ON");
				try {
					c.execute(t);
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		panel.add(powerButton);
		
		JButton Calc1 = new JButton("1");
		Calc1.setBounds(619, 246, 29, 29);
		Calc1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
			}
		});
		panel.add(Calc1);
		
		
		JTextPane consoleText = new JTextPane();
		consoleText.setBounds(246, 246, 252, 179);
		panel.add(consoleText);
		
		JTextPane printerText = new JTextPane();
		printerText.setBounds(598, 52, 180, 160);
		panel.add(printerText);
		
		JButton channel1 = new JButton("1");
		channel1.setBounds(291, 44, 29, 29);
		panel.add(channel1);
		
		JLabel lblNewLabel = new JLabel("CHRONOTIMER 1009");
		lblNewLabel.setBounds(387, 6, 140, 16);
		panel.add(lblNewLabel);
		
		JLabel startLbl = new JLabel("Start");
		startLbl.setBounds(234, 52, 29, 16);
		panel.add(startLbl);
		
		JLabel enableDisplayLbl = new JLabel("Enable/Disable");
		enableDisplayLbl.setBounds(169, 93, 95, 16);
		panel.add(enableDisplayLbl);
		
		JButton channel3 = new JButton("3");
		channel3.setBounds(337, 44, 29, 29);
		panel.add(channel3);
		
		JButton channel5 = new JButton("5");
		channel5.setBounds(385, 44, 29, 29);
		panel.add(channel5);
		
		JButton channel7 = new JButton("7");
		channel7.setBounds(431, 44, 29, 29);
		panel.add(channel7);
		
		JCheckBox check1 = new JCheckBox("");
		check1.setBounds(291, 85, 29, 28);
		panel.add(check1);
		
		JCheckBox check3 = new JCheckBox("");
		check3.setBounds(337, 85, 29, 28);
		panel.add(check3);
		
		JCheckBox check5 = new JCheckBox("");
		check5.setBounds(385, 85, 29, 28);
		panel.add(check5);
		
		JCheckBox check7 = new JCheckBox("");
		check7.setBounds(431, 85, 29, 28);
		panel.add(check7);
		
		JLabel finishLbl = new JLabel("Finish");
		finishLbl.setBounds(225, 164, 38, 16);
		panel.add(finishLbl);
		
		JLabel enableDisableLbl2 = new JLabel("Enable/Disable");
		enableDisableLbl2.setBounds(169, 200, 95, 16);
		panel.add(enableDisableLbl2);
		
		JButton finishButton2 = new JButton("2");
		finishButton2.setBounds(291, 159, 29, 29);
		panel.add(finishButton2);
		
		JButton finishButton4 = new JButton("4");
		finishButton4.setBounds(337, 159, 29, 29);
		panel.add(finishButton4);
		
		JButton finishButton6 = new JButton("6");
		finishButton6.setBounds(387, 159, 29, 29);
		panel.add(finishButton6);
		
		JButton finishButton8 = new JButton("8");
		finishButton8.setBounds(431, 159, 29, 29);
		panel.add(finishButton8);
		
		JCheckBox check2 = new JCheckBox("");
		check2.setBounds(291, 195, 29, 28);
		panel.add(check2);
		
		JCheckBox check4 = new JCheckBox("");
		check4.setBounds(337, 196, 29, 28);
		panel.add(check4);
		
		JCheckBox check6 = new JCheckBox("");
		check6.setBounds(387, 196, 29, 28);
		panel.add(check6);
		
		JCheckBox check8 = new JCheckBox("");
		check8.setBounds(431, 196, 29, 28);
		panel.add(check8);
		
		ArrayList<JCheckBox> checkBoxes = new ArrayList<JCheckBox>();
		checkBoxes.add(check1);
		checkBoxes.add(check2);
		checkBoxes.add(check3);
		checkBoxes.add(check4);
		checkBoxes.add(check5);
		checkBoxes.add(check6);
		checkBoxes.add(check7);
		checkBoxes.add(check8);
		
		ActionListener toggle = new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				for(int i = 0; i < checkBoxes.size(); i++){
					if(e.getSource() == checkBoxes.get(i)){
						c = Command.commandFromString("TOGGLE " + checkBoxes.get(i).getText());
						System.out.println("AYYYLMAO");
					}
				}
			}
		};
		
		for(int i = 0; i < checkBoxes.size(); i++){
			checkBoxes.get(i).addActionListener(toggle);
		}
		
		JButton btnPrinterPower = new JButton("Printer Power");
		btnPrinterPower.setBounds(626, 20, 117, 29);
		panel.add(btnPrinterPower);
		
		JButton Calc2 = new JButton("2");
		Calc2.setBounds(648, 246, 29, 29);
		panel.add(Calc2);
		
		JButton Calc3 = new JButton("3");
		Calc3.setBounds(677, 246, 29, 29);
		panel.add(Calc3);
		
		JButton Calc4 = new JButton("4");
		Calc4.setBounds(619, 273, 29, 29);
		panel.add(Calc4);
		
		JButton Calc5 = new JButton("5");
		Calc5.setBounds(648, 273, 29, 29);
		panel.add(Calc5);
		
		JButton Calc6 = new JButton("6");
		Calc6.setBounds(677, 273, 29, 29);
		panel.add(Calc6);
		
		JButton Calc7 = new JButton("7");
		Calc7.setBounds(619, 301, 29, 29);
		panel.add(Calc7);
		
		JButton Calc8 = new JButton("8");
		Calc8.setBounds(648, 301, 29, 29);
		panel.add(Calc8);
		
		JButton Calc9 = new JButton("9");
		Calc9.setBounds(677, 301, 29, 29);
		panel.add(Calc9);
		
		JButton CalcStar = new JButton("*");
		CalcStar.setBounds(619, 328, 29, 29);
		panel.add(CalcStar);
		
		JButton Calc0 = new JButton("0");
		Calc0.setBounds(648, 328, 29, 29);
		panel.add(Calc0);
		
		JButton CalcPound = new JButton("#");
		CalcPound.setBounds(677, 328, 29, 29);
		panel.add(CalcPound);
		
		JButton btnFunction = new JButton("Function");
		btnFunction.setBounds(40, 301, 117, 29);
		panel.add(btnFunction);
		
		JButton btnUp = new JButton("^");
		btnUp.setBounds(19, 342, 29, 29);
		panel.add(btnUp);
		
		JButton btnDown = new JButton("V");
		btnDown.setBounds(60, 342, 29, 29);
		panel.add(btnDown);
		
		JButton buttonLeft = new JButton("<");
		buttonLeft.setBounds(101, 342, 29, 29);
		panel.add(buttonLeft);
		
		JButton buttonRight = new JButton(">");
		buttonRight.setBounds(142, 342, 29, 29);
		panel.add(buttonRight);
		
		JButton btnSwap = new JButton("Swap");
		btnSwap.setBounds(40, 488, 117, 29);
		panel.add(btnSwap);
		
		JButton connectCommandBtn = new JButton("Connect");
		connectCommandBtn.setBounds(318, 546, 96, 29);
		connectCommandBtn.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				String test = "CONN " + typeOfSensorToConnect + " " + channelToConnect;
				System.out.println(test);
				c = Command.commandFromString(test);
				try {
					c.execute(t);
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
			
		});
		panel.add(connectCommandBtn);
		
		JRadioButton gateSensor = new JRadioButton("GATE");
		
		gateSensor.setBounds(236, 455, 68, 23);
		
	
		
		
		panel.add(gateSensor);
		
		JRadioButton eyeSensor = new JRadioButton("EYE");
		eyeSensor.setBounds(318, 455, 60, 23);
		panel.add(eyeSensor);
		
		JRadioButton padSensor = new JRadioButton("PAD");
		padSensor.setBounds(386, 455, 68, 23);
		panel.add(padSensor);
		
		JRadioButton pushSensor = new JRadioButton("PUSH");
		pushSensor.setBounds(456, 455, 68, 23);
		panel.add(pushSensor);
		
		ButtonGroup sensorGrp = new ButtonGroup();
		sensorGrp.add(gateSensor);
		sensorGrp.add(eyeSensor);
		sensorGrp.add(padSensor);
		sensorGrp.add(pushSensor);
		
		ArrayList<JRadioButton> sensorButtons = new ArrayList<JRadioButton>();
		sensorButtons.add(gateSensor);
		sensorButtons.add(eyeSensor);
		sensorButtons.add(padSensor);
		sensorButtons.add(pushSensor);

		
		
		ActionListener updateSensorType = new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				for(int i = 0; i < sensorButtons.size(); i++){
					if(sensorButtons.get(i) == e.getSource()){
						typeOfSensorToConnect = sensorButtons.get(i).getText();
					}
				}
			}
		};
		
		for(int i = 0; i < sensorButtons.size(); i++){
			sensorButtons.get(i).addActionListener(updateSensorType);
		}
		
		
		JRadioButton channel5Sensor = new JRadioButton("5");
		channel5Sensor.setBounds(281, 511, 46, 23);
		panel.add(channel5Sensor);
		
		JRadioButton channel6Sensor = new JRadioButton("6");
		channel6Sensor.setBounds(323, 511, 46, 23);
		panel.add(channel6Sensor);
		
		JRadioButton channel7Sensor = new JRadioButton("7");
		channel7Sensor.setBounds(368, 509, 46, 23);
		panel.add(channel7Sensor);
		
		JRadioButton channel8Sensor = new JRadioButton("8");
		channel8Sensor.setBounds(414, 509, 46, 23);
		panel.add(channel8Sensor);
		
		JRadioButton channel4Sensor = new JRadioButton("4");
		channel4Sensor.setBounds(414, 488, 46, 23);
		panel.add(channel4Sensor);
		
		JRadioButton channel2Sensor = new JRadioButton("2");
		channel2Sensor.setBounds(323, 488, 46, 23);
		panel.add(channel2Sensor);
		
		JRadioButton channel1Sensor = new JRadioButton("1");
		channel1Sensor.setBounds(281, 488, 46, 23);
		panel.add(channel1Sensor);
		
		JRadioButton channel3Sensor = new JRadioButton("3");
		channel3Sensor.setBounds(368, 488, 46, 23);
		panel.add(channel3Sensor);
		
		ButtonGroup channelGroup = new ButtonGroup();
		channelGroup.add(channel5Sensor);
		channelGroup.add(channel6Sensor);
		channelGroup.add(channel7Sensor);
		channelGroup.add(channel8Sensor);
		channelGroup.add(channel4Sensor);
		channelGroup.add(channel2Sensor);
		channelGroup.add(channel1Sensor);
		channelGroup.add(channel3Sensor);
		
		ArrayList<JRadioButton> channelSensorButtons = new ArrayList<JRadioButton>();
		channelSensorButtons.add(channel1Sensor);
		channelSensorButtons.add(channel2Sensor);
		channelSensorButtons.add(channel3Sensor);
		channelSensorButtons.add(channel4Sensor);
		channelSensorButtons.add(channel5Sensor);
		channelSensorButtons.add(channel6Sensor);
		channelSensorButtons.add(channel7Sensor);
		channelSensorButtons.add(channel8Sensor);

		ActionListener updateChannelType = new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				for(int i = 0; i < channelSensorButtons.size(); i++){
					if(channelSensorButtons.get(i) == e.getSource()){
						channelToConnect = channelSensorButtons.get(i).getText();
					}
				}
			}
		};
		
		for(int i = 0; i < channelSensorButtons.size(); i++){
			channelSensorButtons.get(i).addActionListener(updateChannelType);
		}
		
	}
}
